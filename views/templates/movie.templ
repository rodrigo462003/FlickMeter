package templates

import (
    "fmt"
    "strconv"
    "strings"
	"github.com/rodrigo462003/FlickMeter/model"
	"slices"
)

templ Movie(movie model.Movie, isAuth bool) {
@Base()
<body class="relative flex-col min-h-screen" style={ fmt.Sprintf("background-size: cover;background-image: url(https://image.tmdb.org/t/p/original/%s);background-attachment: fixed;", movie.BackdropPath) }>
    <div class="h-full absolute inset-0 bg-gray-800 bg-opacity-80 backdrop-saturate-200 backdrop-blur-lg -z-10"></div>
    @navbar(isAuth)
    <div class="text-white flex flex-col pt-4 px-52 gap-3" id="content">
        <div class="flex items-center">
            <div class="flex flex-col">
                <h1 class="font-bold font-sans text-4xl">
                    { movie.Title }
                </h1>
                <div class="text-gray-300 flex gap-2">
                    <p>{ strings.Split(movie.ReleaseDate, "-")[0] }</p>
                    <p>•</p>
                    <p>{ strconv.Itoa(movie.Runtime) + "m" }</p>
                    <p>•</p>
                    for i, genre := range movie.Genres {
                    if i == 0 {
                    { genre.Name }
                    } else {
                    { " / " + genre.Name }
                    }
                    }
                </div>
            </div>
            <div class="ml-auto">
                @Ratings(movie.VoteAverage)
            </div>
        </div>
        <div class="flex gap-1 h-[450px] ">
            <img class="h-full rounded-lg w-auto object-cover" id="poster" src={
                fmt.Sprintf("https://image.tmdb.org/t/p/original/%s", movie.PosterPath) } alt="movie poster" />
            @Frame(movie.Trailer())
        </div>
            <p class="overview">
                { movie.Overview }
            </p>
            <hr>
            <h1 class="text-xl font-bold">Reviews</h1>
            for review := range slices.Values(movie.Reviews) {
                <p>{ review.User.Username }</p>
                <p>{ review.Review }</p>
            }
    </div>
</body>
}

templ Ratings(rating float64) {
<div class="flex  gap-2 items-center">
    <div class="flex items-end">
        <div class="font-bold text-xl">
            { fmt.Sprintf("%.1f",rating) }
        </div>
         <div class="text-gray-300 text-sm">
            /10
        </div>
  </div>
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="26" height="26">
    <path d="M12 16.8l5 3c.7.4 1.4-.2 1.2-.9l-1.3-5.6 4.3-3.7c.6-.5.3-1.4-.4-1.5l-5.6-.4-2.3-5.2c-.3-.7-1.2-.7-1.5 0l-2.3 5.2-5.6.4c-.8.1-1 .9-.4 1.5l4.3 3.7-1.3 5.6c-.2.7.5 1.3 1.2.9z"
          fill="gold" stroke="gold" stroke-width="1.2" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
</div>
}

templ Frame(trailer *model.Video) {
if trailer != nil {
<iframe src={ fmt.Sprintf("https://www.youtube.com/embed/%s?autoplay=1&mute=1", trailer.Key) }
    class="h-full w-full rounded-lg" id="videoIframe" title="YouTube video player" frameborder="0"
    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
    referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
}
}
