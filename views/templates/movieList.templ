package templates

import "github.com/rodrigo462003/FlickMeter/model"
import "strings"
import "fmt"
import "slices"

templ listWithTitle(title string, movies []model.Movie, user *model.User) {
	<div class="flex flex-col gap-2">
		@listTitle(title)
		@movieList(movies, user)
	</div>
}

templ listTitle(title string) {
	<h1
		style="font-family: 'Broadway Flat 3D', sans-serif;"
		class="text-indigo-700 px-2 uppercase font-extrabold text-4xl font-sans"
	>{ title }</h1>
}

templ movieList(movies []model.Movie, user *model.User) {
	<div class="h-[17rem] px-2 pb-3 py-2 flex gap-4 overflow-x-scroll whitespace-nowrap">
		for _, movie := range movies {
			@movieA(&movie, user)
		}
	</div>
}

templ movieA(movie *model.Movie, user *model.User) {
	<div class="relative overflow-clip rounded-md">
		<a
			id="movieA"
			class="peer active:scale-90 focus:outline-8 focus:outline-indigo-700
    shadow-grey-900 shadow-md"
			href={ templ.SafeURL(fmt.Sprintf("/movie/%d/", movie.ID)) }
		>
			@moviePoster(movie.PosterPath)
		</a>
		@toggleWatchlist(movie.ID, user)
		@movieHover(movie)
	</div>
}

templ movieHover(movie *model.Movie) {
	<div
		class="px-2 hover:py-2 ease-in-out peer-hover:py-2 flex flex-col transition-all duration-[250ms] bg-opacity-70 hover:h-[40%] h-0 bg-black peer-hover:h-[40%] absolute w-full bottom-0"
	>
		<div class="font-bold text-white truncate">
			{ movie.Title }
		</div>
		<div class="mt-auto text-white">
			<div class="flex flex-row">
				{ strings.Split(movie.ReleaseDate, "-")[0] }
				<div class="flex items-center flex-row ml-auto gap-1">
					{ fmt.Sprintf("%.1f", movie.VoteAverage) }
					@star()
				</div>
			</div>
		</div>
	</div>
}

templ moviePoster(posterPath string) {
	if posterPath == "" {
		<svg
			xmlns="http://www.w3.org/2000/svg"
			class="bg-black rounded-lg"
			viewBox="0 0 24 24"
			fill="currentColor"
			role="presentation"
		>
			<path fill="none" d="M0 0h24v24H0V0z"></path>
			<path
				d="M18 4v1h-2V4c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v1H6V4c0-.55-.45-1-1-1s-1 .45-1 1v16c0 .55.45 1 1 1s1-.45 1-1v-1h2v1c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-1h2v1c0 .55.45 1 1 1s1-.45 1-1V4c0-.55-.45-1-1-1s-1 .45-1 1zM8 17H6v-2h2v2zm0-4H6v-2h2v2zm0-4H6V7h2v2zm10 8h-2v-2h2v2zm0-4h-2v-2h2v2zm0-4h-2V7h2v2z"
			></path>
		</svg>
	} else {
		<img
			loading="lazy"
			alt="Movie Poster"
			onload="this.classList.toggle('opacity-0')"
			class="peer h-full max-w-fit opacity-0"
			src={ fmt.Sprintf("https://image.tmdb.org/t/p/original%s", posterPath) }
		/>
	}
}

templ toggleWatchlist(movieID uint, user *model.User) {
	if slices.ContainsFunc(user.Watchlist, func(w model.Watchlist) bool { return w.MovieID == movieID }) {
		<button
			hx-post={ fmt.Sprintf("movie/%d/removeFromList", movieID) }
			id="watchListToggle"
			class="peer absolute top-0 right-0"
			hx-swap="outerHTML"
		>
			@WatchListON()
		</button>
	} else {
		<button
			hx-post={ fmt.Sprintf("movie/%d/addToList", movieID) }
			id="watchListToggle"
			class="peer absolute top-0 right-0"
			hx-swap="outerHTML"
		>
			@WatchListOFF()
		</button>
	}
}

templ WatchListON() {
	<svg
		width="24px"
		height="34px"
		viewBox="0 0 24 34"
		xmlns="http://www.w3.org/2000/svg"
		role="presentation"
		class="text-indigo-700"
	>
		<polygon points="24 0 0 0 0 32 12.2436611 26.2926049 24 31.7728343" fill="currentColor"></polygon>
		<polygon points="24 0 0 0 0 32 12.2436611 26.2926049 24 31.7728343" fill="currentColor"></polygon>
		<polygon
			points="24 31.7728343 24 33.7728343 12.2436611 28.2926049 0 34 0 32 12.2436611 26.2926049"
			fill="currentColor"
		></polygon>
		<path d="M0 0h24v24H0V0z" fill="currentColor"></path>
		<path
			d="M9 16.2l-3.5-3.5a.984.984 0 0 0-1.4 0 .984.984 0 0 0 0 1.4l4.19 4.19c.39.39 1.02.39 1.41 0L20.3 7.7a.984.984 0 0 0 0-1.4.984.984 0 0 0-1.4 0L9 16.2z"
			fill="#fff"
		></path>
	</svg>
}

templ WatchListOFF() {
	<svg
		width="24px"
		class="text-black"
		height="34px"
		viewBox="0 0 24 34"
		xmlns="http://www.w3.org/2000/svg"
		role="presentation"
	>
		<polygon points="24 0 0 0 0 32 12.2436611 26.2926049 24 31.7728343" fill="currentColor"></polygon>
		<polygon points="24 0 0 0 0 32 12.2436611 26.2926049 24 31.7728343" fill="currentColor"></polygon>
		<polygon points="24 31.7728343 24 33.7728343 12.2436611 28.2926049 0 34 0 32 12.2436611 26.2926049"></polygon>
		<path
			fill="#fff"
			d="M18 13h-5v5c0 .55-.45 1-1 1s-1-.45-1-1v-5H6c-.55 0-1-.45-1-1s.45-1 1-1h5V6c0-.55.45-1 1-1s1 .45 1 1v5h5c.55 0 1 .45 1 1s-.45 1-1 1z"
		></path>
	</svg>
}
